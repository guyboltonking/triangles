:root {
  font-family: Helvetica, Arial, sans-serif;
  font-size: 16px;
  line-height: 24px;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
}

body {
  margin: 0;
  display: flex;
  flex-flow: column nowrap;
  min-width: 320px;
  min-height: 100vh;
}

%control-container {
  display: flex;
  flex-flow: row wrap;
  column-gap: 1em;
  row-gap: 1ex;
  align-items: center;

  >* {
    flex: 0 1 auto;
  }
}

.control-group {
  @extend %control-container;
}

.control {
  @extend %control-container;
  column-gap: 0.5em;
}

#app {
  flex: 1 1 auto;

  display: flex;
  flex-flow: column nowrap;


  #controls {
    flex: 0 1 content;
    margin: 0.5ex;

    .input-group {
      width: auto;
    }

    #zoomValue {
      width: 4em;
    }

    #fps>input {
      width: 3em;
    }

    #selectedPlayer {
      width: 24em;
      flex-wrap: nowrap;

      .position {
        text-align: right;
        column-gap: 0;

        .coordinate {
          display: inline;
          width: 3em;
        }
      }
    }
  }

  .input-group .form-range {
    height: inherit;
  }

  #display {
    flex: 1 1 auto;
    display: flex;
    flex-flow: column nowrap;

    svg {
      /* Don't use auto for the flex-basis: it causes the svg to grow in
    height to suit the aspect ration of the viewBox, causing a nasty
    constantly resized svg. */
      flex: 1 1 0;
      border: solid black 1px;
      /* Prevent text selection */
      user-select: none;
    }
  }
}